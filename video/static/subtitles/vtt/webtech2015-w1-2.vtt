WEBVTT

1
00:00:00.017 --> 00:00:04.314
现在让我们来介绍超文本、HTML和XML

2
00:00:05.154 --> 00:00:14.617
超文本或超媒体，都是可以在互联网上进行访问的

3
00:00:15.697 --> 00:00:20.922
有着超链接机制特点的文档

4
00:00:22.026 --> 00:00:29.274
因此，人们可以把万维网称为超媒体或超文本系统

5
00:00:29.802 --> 00:00:39.770
在万维网上的文档通过超链接方式彼此互联

6
00:00:41.242 --> 00:00:45.466
传统上，这些文档的内部结构是线性的

7
00:00:46.267 --> 00:00:51.850
就像您从开头开始读一本书

8
00:00:53.066 --> 00:00:57.434
希望在结尾处了解作者想通过这本书表达些什么

9
00:00:58.498 --> 00:01:05.114
而对于作者来说，自始至终都组织一个线性顺序是困难的

10
00:01:05.722 --> 00:01:08.066
例如当他们想要解释一些内容的时候

11
00:01:08.994 --> 00:01:12.978
通过在互联网上应用该超文本超链接结构

12
00:01:13.810 --> 00:01:20.642
我们就能轻松的实现文本互联

13
00:01:21.195 --> 00:01:24.842
因此，并不一定要遵循线性顺序

14
00:01:25.546 --> 00:01:34.418
你可以直接把相关联的文档归在一起

15
00:01:34.986 --> 00:01:41.682
用户可以遵循这个连接结构，通过一个链接

16
00:01:42.410 --> 00:01:47.586
从另一个与此相关的文本直接访问这个网络文档

17
00:01:48.474 --> 00:01:54.650
因此这些文件甚至不需要被放在同一个服务器上

18
00:01:55.722 --> 00:02:01.274
这些文件可以存储在全球不同的服务器上

19
00:02:02.466 --> 00:02:06.938
如果一个人能够通过超链接的方式访问一个文本

20
00:02:07.610 --> 00:02:09.130
通过超链接的方式

21
00:02:09.818 --> 00:02:16.842
他都能直接访问全球其他任何一个服务器上的文本

22
00:02:17.522 --> 00:02:19.146
通过这种方式

23
00:02:20.090 --> 00:02:22.994
网络成为了真正的世界性分布的超媒体系统

24
00:02:23.842 --> 00:02:29.834
网络文件可以在世界各地的服务器上被接收

25
00:02:30.714 --> 00:02:37.410
而这在一方面提供了便利

26
00:02:38.354 --> 00:02:44.874
但在另一方面很难保证超链接长久有效

27
00:02:45.490 --> 00:02:49.500
因为承担责任的服务器拥有者

28
00:02:50.266 --> 00:02:52.826
可以轻易替换文件

29
00:02:53.322 --> 00:03:00.082
而作者根本不知道他设置的超链接

30
00:03:01.090 --> 00:03:06.090
所指向的文件已经被删除或替换

31
00:03:06.810 --> 00:03:08.082
这是缺点

32
00:03:08.106 --> 00:03:13.506
好处当然是人们可以在任何地方

33
00:03:13.738 --> 00:03:17.242
自由地向万维网提供上传新的内容

34
00:03:19.018 --> 00:03:23.508
对于描述和撰写网络文档

35
00:03:24.338 --> 00:03:26.331
一个特殊的语言是必要的

36
00:03:27.354 --> 00:03:33.874
这种语言是HTML语言，超文本标记语言

37
00:03:34.914 --> 00:03:43.410
更好的说法是超媒体标记语言

38
00:03:44.218 --> 00:03:49.986
但这是历史原因， 因为最初的文件都是文本文档

39
00:03:51.842 --> 00:03:54.818
网络文档的作者可以通过这种特殊的HTML语言

40
00:03:55.282 --> 00:04:04.098
来描述网络文档的结构

41
00:04:05.578 --> 00:04:09.226
什么是结构？结构就是：这是标题

42
00:04:10.235 --> 00:04:14.714
第一部分，第二部分，这是一个段落，这是一个表

43
00:04:15.418 --> 00:04:19.466
这就是网络文件结构的描述

44
00:04:20.026 --> 00:04:23.922
当然结构中最重要的部分是超链接

45
00:04:25.146 --> 00:04:28.268
它是用HTML语言的方式

46
00:04:28.746 --> 00:04:38.690
将多媒体内容嵌入网页文档，视频，照片，图形等

47
00:04:40.347 --> 00:04:50.667
HTML的这种方式影响了图像演示

48
00:04:52.274 --> 00:04:56.427
万维网发展的初期HTML不仅用于描述文档结构

49
00:04:57.187 --> 00:05:04.146
也用于描述文档的演示

50
00:05:06.115 --> 00:05:10.275
这种HTML文件被称为网页

51
00:05:11.635 --> 00:05:14.131
因此网络中的资源就是这些网页

52
00:05:15.371 --> 00:05:19.875
如果几个页面从属于一个内容提供者

53
00:05:20.588 --> 00:05:22.683
一个作者或是一个公司

54
00:05:23.747 --> 00:05:30.787
那么我们把这些内容的起始页面称为主页

55
00:05:31.443 --> 00:05:36.939
现在说说浏览器，这些是万维网的使用者

56
00:05:38.091 --> 00:05:42.931
他们要求看到一个网页，现在他们有了一个

57
00:05:43.427 --> 00:05:48.211
他们收到这个页面，解释并显示给用户

58
00:05:49.379 --> 00:05:53.899
因此，浏览器需要知道哪些页面是图像

59
00:05:54.939 --> 00:05:57.659
哪些是文字，哪些部分是本网站的文本

60
00:05:59.180 --> 00:06:02.667
为了这样的特殊目的

61
00:06:03.451 --> 00:06:12.907
标记语言，也就是HTML语言产生了

62
00:06:13.883 --> 00:06:16.779
通过标记，识别符的手段

63
00:06:17.587 --> 00:06:24.420
这种语言能够帮助我们说明

64
00:06:25.091 --> 00:06:27.683
文件的这部分是标题，这是过渡段，等等

65
00:06:28.012 --> 00:06:33.020
浏览器需要理解这些标记

66
00:06:33.812 --> 00:06:39.844
以此解释HTML，并能够以正确的方式显示网页

67
00:06:40.806 --> 00:06:49.404
因此标记语言应该只被用来解释文件的结构

68
00:06:50.356 --> 00:06:54.445
而不应该被用于文件演示

69
00:06:55.140 --> 00:06:57.173
不幸的是，用HTML这种方式

70
00:06:57.765 --> 00:07:04.428
有一些要素会影响文档的演示

71
00:07:05.101 --> 00:07:07.692
但是这是在万维网发展的最早期

72
00:07:08.197 --> 00:07:17.030
现在我们越来越坚持文档结构、布局与格式的分离

73
00:07:18.900 --> 00:07:25.455
每一个网页都由两部分组成

74
00:07:26.557 --> 00:07:34.949
一部分是所谓的包含了关于文档信息的头文件

75
00:07:36.140 --> 00:07:37.501
即所谓的元信息

76
00:07:38.533 --> 00:07:48.165
再有就是包含了文件实际内容的文档的主体

77
00:07:50.925 --> 00:07:58.829
这个标记语言的基本观点就是结构和设计的分离

78
00:07:59.765 --> 00:08:03.733
HTML负责描述文档结构

79
00:08:04.645 --> 00:08:10.917
为了说明文档的设计和布局

80
00:08:12.350 --> 00:08:18.949
我们有另一种语言，即所谓的层叠样式表

81
00:08:20.120 --> 00:08:25.813
层叠样式表(CSS)语言是负责演示的描述

82
00:08:26.613 --> 00:08:29.121
是关于布局，这是结构

83
00:08:30.157 --> 00:08:37.837
例如，标题以加粗的方式

84
00:08:38.525 --> 00:08:40.221
以比文档更大的字号来设计和展现

85
00:08:41.757 --> 00:08:50.368
这样的CCS应用的主要领域是网页布局的定义

86
00:08:51.781 --> 00:08:54.413
它采用各种输出媒体

87
00:08:56.005 --> 00:08:59.829
因为通常一个网页文件都是多媒体文件

88
00:09:00.429 --> 00:09:04.149
它会提供一个中央布局管理

89
00:09:05.197 --> 00:09:09.517
因此当提供者给出了几个网页

90
00:09:10.437 --> 00:09:15.061
这些网页可能是遵循同一个主线来布局的

91
00:09:17.725 --> 00:09:24.797
在特殊标签的帮助下，可以完成链接和超链接。

92
00:09:25.709 --> 00:09:29.725
超链接是保存在网页内部

93
00:09:30.629 --> 00:09:38.653
与特殊的概念或者图像相互连接

94
00:09:39.965 --> 00:09:47.365
如果用户点击链接

95
00:09:48.085 --> 00:09:52.317
链接储存的内容就会在浏览器上显示

96
00:09:53.693 --> 00:09:59.582
然后用户将会被引向链接指向的文件

97
00:10:00.565 --> 00:10:04.557
在这种方式中，链接是被动地指向其他文件

98
00:10:06.749 --> 00:10:11.973
重要的是要知晓指向的是哪个文件

99
00:10:13.349 --> 00:10:19.037
因此，每个文件都需要一个唯一的标识符

100
00:10:19.965 --> 00:10:26.413
万维网中这样的唯一标识符

101
00:10:27.053 --> 00:10:34.085
是由URIs，所谓统一资源标识符所提供的

102
00:10:35.397 --> 00:10:39.381
他们服务于文件的全球唯一标识

103
00:10:41.333 --> 00:10:48.229
该URI可以被编码在字符串中，并且可以被组织

104
00:10:49.254 --> 00:10:53.982
我们有两种类型的应用

105
00:10:55.397 --> 00:11:01.869
一种是大家所了解的URL，统一资源定位符

106
00:11:02.533 --> 00:11:03.813
这种URL，它们的组成部分包括

107
00:11:04.693 --> 00:11:15.373
接入协议，储存资源的计算机名和文件名

108
00:11:16.021 --> 00:11:21.141
也就是在服务器上能找到该文件的具体路径

109
00:11:21.765 --> 00:11:22.693
因此这三部分

110
00:11:23.406 --> 00:11:31.421
接入协议，放置文件的计算机名称，以及文件名称

111
00:11:31.893 --> 00:11:37.389
让URL可以定位万维网上的资源

112
00:11:39.245 --> 00:11:47.672
纵观万维网的发展和有越来越多的个性化的需求

113
00:11:48.621 --> 00:11:53.853
对HTML标记语言产生了主要的批评意见

114
00:11:55.037 --> 00:12:00.157
即缺乏灵活性

115
00:12:01.224 --> 00:12:06.125
用户希望用自己的结构进行设计

116
00:12:07.102 --> 00:12:11.885
用特殊的注释设计语言

117
00:12:12.999 --> 00:12:16.333
为了解决那些演示中特殊类型的问题

118
00:12:17.317 --> 00:12:27.205
因此，我们开发出了一种标记语言

119
00:12:28.350 --> 00:12:30.317
其实它不是一种标记语言

120
00:12:31.021 --> 00:12:32.717
它是一种元标记语言

121
00:12:33.621 --> 00:12:36.957
XML, 可扩展标记语言

122
00:12:36.958 --> 00:12:40.973
这使得设计新的标记语言成为可能。

123
00:12:41.845 --> 00:12:48.325
它可以用自己的语法描述每一种类型的文件

124
00:12:49.694 --> 00:12:51.974
它不是一个单一的标记语言

125
00:12:52.629 --> 00:12:56.461
它是设计标记语言的一种方式

126
00:12:57.229 --> 00:13:00.710
这被称为元标记语言

127
00:13:01.662 --> 00:13:09.302
通过XML可以实现为特定用途设计标识语言

128
00:13:10.317 --> 00:13:15.958
例如XML是为各种应用设计特定标记语言的起点

129
00:13:16.862 --> 00:13:21.822
这些是为专门的目的定制的

130
00:13:22.238 --> 00:13:24.878
或是应用于专门的应用领域

131
00:13:25.318 --> 00:13:30.006
比如，数学标记语言MathML

132
00:13:30.734 --> 00:13:37.206
这是一种用XML设计的为特定目的

133
00:13:37.726 --> 00:13:45.198
用正确方式描述数学公式、数学概念的语言

134
00:13:45.760 --> 00:13:49.022
或SVG，可伸缩矢量图形

135
00:13:49.478 --> 00:13:52.510
或ODF，办公应用的开放文档格式

136
00:13:52.918 --> 00:14:02.838
这些都是由XML这种为特定领域的应用程序

137
00:14:03.550 --> 00:14:07.926
或特定输出设备描述的标记语言设计的特定版本

138
00:14:10.102 --> 00:14:12.294
以上就是这一次的课程

139
00:14:12.926 --> 00:14:18.022
在我们接下来的课程中我们会深入细节

140
00:14:18.838 --> 00:14:26.070
在本周我们针对网络的不同组成部分做了一个概述

